# User defined generic function that operates on unknown shaped arguments.
# This is a kind of Rise language, that can be parsed by the toy_example lexer and parser
# For now we use this structure to keep the simple lexer and parser.

# TODO: Define all the things, so this works with -emit=mlir
# HighLevel
def dotProduct(a, b) {
    return reduce(add, 0, map(mult, zip(a, b)));
}

# mlir
func dotProduct(%arg0: !rise.array, %arg1: !rise.array) {
    %zipped = zip(%arg0, %arg1);
    %product = map(mult, %zipped);
    %result = reduce(add, 0, %product);

    return %result;
}